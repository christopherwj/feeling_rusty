# Rust build artifacts
/target/
**/*.rs.bk
*.pdb

# Cargo lock file (uncomment if you want to commit it)
# Cargo.lock

# Generated by Cargo
# Will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~

# OS-specific files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Logs
*.log

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/

# Dependency directories
node_modules/

# Optional npm cache directory
.npm

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Rust-specific
# Generated by rustdoc
doc/

# Generated by cargo-flamegraph
flamegraph.svg
perf.data*

# Generated by cargo-tarpaulin
tarpaulin-report.html

# JetBrains IDEs
#.idea/
# *.iml
# *.ipr
# *.iws

# Visual Studio Code
.vscode/

# Sublime Text
# *.sublime-project
# *.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Backup files
*.bak
*.backup
*.old
*.orig
*.tmp

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Executables
*.exe

# Rust analyzer
rust-project.json 
